name: CI

on: [push]

jobs:

  linting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: ${{ runner.os }}-pip

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --statistics

      - name: Black formatting
        uses: psf/black@stable
        with:
          options: "--check --target-version py310"

      - name: Import sortings (isort)
        run: |
          pip install isort
          isort .


  test:
    needs: linting
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Cache Poetry Virtualenv
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Test with pytest
        run: poetry run pytest --cov=./ --cov-report=xml -n 2
      - uses: codecov/codecov-action@v2
        with:
          files: ./coverage.xml
          flags: unittests
          fail_ci_if_error: true
          verbose: true